name: Create Release

on:
  workflow_dispatch:

jobs:
  CreateRelease:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set Git Config
      run: |
        git config user.name ${{ secrets.COMMITTER_NAME }}
        git config user.email ${{ secrets.COMMITTER_EMAIL }}

    - name: Debug - List Branches
      run: |
        git branch -a

    - name: Check if AssetStoreRelease branch exists
      run: |
        if ! git show-ref --verify --quiet refs/heads/AssetStoreRelease; then
          git checkout -b AssetStoreRelease
        else
          git checkout AssetStoreRelease
        fi

    - name: Debug - List Files
      run: |
        ls -al

    - name: Merge Master into AssetStoreRelease
      run: |
        git merge master
        git push

#jobs:
#  CreateRelease:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout Repo
#        uses: actions/checkout@v2
#        with:
#          ref: AssetStoreRelease

#      - name: Merge master into AssetStoreRelease
#        run: |
#          git fetch origin master --depth 1
#          git reset --hard origin/master
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#      - name: Set up .NET Core
#        uses: actions/setup-dotnet@v1

#      - name: Install dotnet-script
#        run: |
#          dotnet tool install -g dotnet-script
#          dotnet script --version

#      - name: Run CreateRelease.cs
#        run: |
#          dotnet script .github/CreateRelease.cs

#      - name: Commit and Push
#        run: |
#          git config --local user.name ${{ secrets.COMMITTER_NAME }}
#          git config --local user.email ${{ secrets.COMMITTER_EMAIL }}
#          git add Assets/Mirror/version.txt
#          git commit -m "release!: Asset Store Release" -a

#          # Configure Git to rebase when pulling
#          git config --local pull.rebase true

#          # Perform a git pull to update the local branch with remote changes
#          git pull origin AssetStoreRelease

#          # Push the updated branch to the remote
#          git push origin AssetStoreRelease
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
